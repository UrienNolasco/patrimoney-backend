### auth.http
### Coleção de testes para o módulo de autenticação

# Variáveis - Altere a porta se a sua aplicação rodar em uma diferente
@host = http://localhost:3000
@email_valido = usuario.teste.2506@exemplo.com
@senha_valida = SenhaForte123!

# Variáveis que serão preenchidas pelos testes

@jwt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4YjEzZDljOS1iMjY4LTRkYjctOGQ0MC02Y2ZmNWY4YmI4MGMiLCJlbWFpbCI6InVzdWFyaW8udGVzdGUuMjUwNkBleGVtcGxvLmNvbSIsImlhdCI6MTc1MDkxMTg4MCwiZXhwIjoxNzUwOTE1NDgwfQ.gkQt8CcDYvC9Nyi7W4cFSMSpyw7xT_HdCI8eazUcvXg
@wallet_id = a2ecca97-9620-4bd4-9567-c3399f3331a6

###
# =======================================================
# 1. Criar uma nova conta com sucesso
# =======================================================
POST {{host}}/auth/register
Content-Type: application/json

{
  "email": "{{email_valido}}",
  "password": "{{senha_valida}}",
  "name": "Usuário de Teste"
}

###
# =======================================================
# 2. Tentar criar a mesma conta novamente
# =======================================================
POST {{host}}/auth/register
Content-Type: application/json

{
  "email": "{{email_valido}}",
  "password": "outraSenhaQualquer",
  "name": "Usuário Duplicado"
}

###
# =======================================================
# 3. Tentar criar uma conta com e-mail inválido
# =======================================================
POST {{host}}/auth/register
Content-Type: application/json

{
  "email": "email-invalido",
  "password": "{{senha_valida}}",
  "name": "Usuário Inválido"
}

###
# =======================================================
# 4. Tentar criar uma conta com senha muito curta
# =======================================================
POST {{host}}/auth/register
Content-Type: application/json

{
  "email": "outro.usuario@exemplo.com",
  "password": "123",
  "name": "Usuário Senha Curta"
}

###
# =======================================================
# 5. Fazer login com sucesso
# =======================================================
POST {{host}}/auth/login
Content-Type: application/json

{
  "email": "{{email_valido}}",
  "password": "{{senha_valida}}"
}


###
# =======================================================
# 6. Tentar fazer login com senha incorreta
# =======================================================
POST {{host}}/auth/login
Content-Type: application/json

{
  "email": "{{email_valido}}",
  "password": "senha-incorreta-123"
}


###
# =======================================================
# 7. Tentar fazer login com um usuário que não existe
# =======================================================
POST {{host}}/auth/login
Content-Type: application/json

{
  "email": "ninguem@exemplo.com",
  "password": "qualquercoisa"
}

###
# =======================================================
# 8. (NOVO) Buscar a carteira do usuário logado
# =======================================================
# PRÉ-REQUISITO: Execute o teste #5 (Login) primeiro para obter o token.
# ESPERADO: Status 200 OK e os dados da carteira do usuário.
GET {{host}}/wallet
Authorization: Bearer {{jwt_token}}


###
# =======================================================
# 9. (NOVO) Atualizar a carteira do usuário logado
# =======================================================
# PRÉ-REQUISITO: Execute o teste #5 (Login) primeiro para obter o token.
# ESPERADO: Status 200 OK e os dados da carteira com o nome atualizado.
PATCH {{host}}/wallet
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "name": "Minha Carteira Principal (Editada)",
  "description": "Esta é a minha carteira principal, agora com uma descrição atualizada."
}


###
# =======================================================
# 10. (NOVO) Tentar buscar a carteira sem autenticação
# =======================================================
# OBJETIVO: Testar se a rota está devidamente protegida.
# ESPERADO: Status 401 Unauthorized.
GET {{host}}/wallet

###
# =======================================================
# 11. (NOVO) Registrar a primeira compra de um ativo (PETR4)
# =======================================================
# PRÉ-REQUISITOS: 
# 1. Execute os testes #5 e #8 para obter o token e o ID da carteira.
# 2. Garanta que o ativo 'PETR4' existe na sua tabela "stocks".
# ESPERADO: Status 201 Created.
POST {{host}}/transactions
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "walletId": "{{wallet_id}}",
  "stockSymbol": "PETR4",
  "type": "BUY",
  "quantity": 10,
  "price": 35.50,
  "executedAt": "2025-06-25T10:00:00Z"
}


###
# =======================================================
# 12. (NOVO) Registrar a segunda compra do mesmo ativo (PETR4)
# =======================================================
# PRÉ-REQUISITOS: Execute os testes #5, #8 e #11.
# ESPERADO: Status 201 Created. O preço médio do item no portfólio será recalculado.
POST {{host}}/transactions
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "walletId": "{{wallet_id}}",
  "stockSymbol": "PETR4",
  "type": "BUY",
  "quantity": 5,
  "price": 37.00,
  "executedAt": "2025-06-26T11:00:00Z"
}


###
# =======================================================
# 13. (NOVO) Registrar uma venda parcial (PETR4)
# =======================================================
# PRÉ-REQUISITOS: Execute os testes anteriores de compra.
# ESPERADO: Status 201 Created. A quantidade do item no portfólio será reduzida.
POST {{host}}/transactions
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "walletId": "{{wallet_id}}",
  "stockSymbol": "PETR4",
  "type": "SELL",
  "quantity": 6,
  "price": 38.00,
  "executedAt": "2025-06-26T12:00:00Z"
}