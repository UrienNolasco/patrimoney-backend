### auth.http
### Coleção de testes para o módulo de autenticação

# Variáveis - Altere a porta se a sua aplicação rodar em uma diferente
@host = http://localhost:3000
@email_valido = usuario.teste.2506@exemplo.com
@senha_valida = SenhaForte123!


###
# =======================================================
# 1. Criar uma nova conta com sucesso
# =======================================================
#
# OBJETIVO: Testar o "caminho feliz".
# ESPERADO: Retornar status 201 Created com os dados do usuário (sem a senha) e da carteira criada.
#
POST {{host}}/auth/register
Content-Type: application/json

{
  "email": "{{email_valido}}",
  "password": "{{senha_valida}}",
  "name": "Usuário de Teste"
}


###
# =======================================================
# 2. Tentar criar a mesma conta novamente
# =======================================================
#
# OBJETIVO: Garantir que o e-mail é único.
# ESPERADO: Retornar status 409 Conflict com a mensagem "O e-mail já está em uso."
#
POST {{host}}/auth/register
Content-Type: application/json

{
  "email": "{{email_valido}}",
  "password": "outraSenhaQualquer",
  "name": "Usuário Duplicado"
}


###
# =======================================================
# 3. Tentar criar uma conta com e-mail inválido
# =======================================================
#
# OBJETIVO: Testar a validação do DTO (class-validator).
# ESPERADO: Retornar status 400 Bad Request com os detalhes do erro de validação.
#
POST {{host}}/auth/register
Content-Type: application/json

{
  "email": "email-invalido",
  "password": "{{senha_valida}}",
  "name": "Usuário Inválido"
}


###
# =======================================================
# 4. Tentar criar uma conta com senha muito curta
# =======================================================
#
# OBJETIVO: Testar a validação de tamanho mínimo da senha no DTO.
# ESPERADO: Retornar status 400 Bad Request com a mensagem "A senha deve ter no mínimo 8 caracteres."
#
POST {{host}}/auth/register
Content-Type: application/json

{
  "email": "outro.usuario@exemplo.com",
  "password": "123",
  "name": "Usuário Senha Curta"
}

###
# =======================================================
# 5. Login com conta criada com sucesso
# =======================================================
#
# OBJETIVO: Testar o login com credenciais válidas.
# ESPERADO: Retornar status 200 OK com o token JWT e os dados do usuário (sem a senha).
#

POST {{host}}/auth/login
Content-Type: application/json

{
  "email": "usuario.teste.2506@exemplo.com",
  "password": "SenhaForte123!",
}
